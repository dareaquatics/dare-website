name: Deploy to GitHub Pages

on:
  workflow_dispatch:  # Allows manual triggering via GitHub UI
  schedule:           # Runs daily at midnight (UTC)
    - cron: "0 0 * * *"
  push:               # Runs on push to the `main` branch
    branches:
      - main
    paths:            # Only trigger if changes are in the root or assets folder
      - '*'           # All files in the root directory
      - 'assets/**'   # Everything inside the assets folder

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Ensures full commit history for change detection

      # Step 2: Identify changed files
      - name: Identify changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          separator: ','  # For reliable file handling
          since_last_remote_commit: 'true'  # Detect changes since last commit

      # Step 3: Validate changes against excluded patterns
      - name: Validate changes
        id: check-changes
        env:
          EXCLUDED_PATTERNS: |
            ^\.github/.*                    # GitHub workflows and configs
            ^\.gitignore$                   # Git ignore file
            ^go\.mod$                       # Go module file
            ^LICENSE$                       # License file
            ^README\.md$                    # Repository readme
            ^maintenanceStatusToggle\.json$ # Maintenance config
            ^config\.yaml$                  # Configuration file
            ^developerResources/.*          # Developer resources
            ^syncHandlers/.*                # Sync handlers directory
        run: |
          # Convert the comma-separated list of changed files to an array
          mapfile -t files <<< "$(echo '${{ steps.changed-files.outputs.all_changed_files }}' | tr ',' '\n')"
          
          relevant_changes=0
          for file in "${files[@]}"; do
            [[ -z "$file" ]] && continue  # Skip empty entries
            
            excluded=false
            while IFS= read -r pattern; do
              [[ -z "$pattern" ]] && continue
              if [[ "$file" =~ $pattern ]]; then
                excluded=true
                break
              fi
            done <<< "$(echo "$EXCLUDED_PATTERNS" | grep -v '^#')"
            
            if ! $excluded; then
              echo "Relevant change detected: $file"
              relevant_changes=$((relevant_changes + 1))
            fi
          done

          # Output whether to proceed with deployment
          if [ $relevant_changes -eq 0 ]; then
            echo "::notice::No deploy-triggering files modified"
            echo "proceed=false" >> $GITHUB_OUTPUT
          else
            echo "::notice::Triggering deploy ($relevant_changes relevant changes)"
            echo "proceed=true" >> $GITHUB_OUTPUT
          fi

      # Step 4: Deploy to GitHub Pages (only if relevant changes are detected)
      - name: Deploy to GitHub Pages
        if: steps.check-changes.outputs.proceed == 'true'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.PAT_TOKEN }}  # Personal Access Token for deployment
          publish_dir: ./                         # Deploy the root directory
          publish_branch: live                  # Deploy to the `live` branch
          keep_files: true                        # Preserve existing files on the target branch
